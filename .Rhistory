ning.csv
MachineLeaningAssignment.html   pml-testing.csv
myab@MbIWKA:~/gitlocal/MachineLeaningAssignment$ library(caret); library(e1071);library(kernlab)bash: syntax error near unexpected token `caret'
ning.csv
MachineLeaningAssignment.html   pml-testing.csv
myab@MbIWKA:~/gitlocal/MachineLeaningAssignment$ library(caret); library(e1071);library(kernlab)bash: syntax error near unexpected token `caret'
library(caret); library(e1071);library(kernlab)
training=read.csv("pml-training.csv", stringsAsFactors=F)
testing=read.csv("pml-testing.csv", stringsAsFactors=F)
names(training)[1:10]
training$X[1:20]
str(training)
str(testing)
unique(testing$max_picth_belt)
?boxplottesting
?boxplot
barpot(
testing[, 10]~testing[, 160], col=c(2,3,5))
boxplot[, 10]~testing[, 160], col=c(2,3,5))
boxplot(testing[, 10]~testing[, 160], col=c(2,3,5))
unique(testin[, 160])
unique(testing[, 160])
boxplot(training[, 10]~training[, 160], col=c(2,3,5))
boxplot(training[, 10]~training[, 160], col=2:6)
par(mfrow=c(3,4))
boxplot(training[, 8:20]~training[, 160], col=2:6)
dim(training[, 8:20])
boxplot(training[, 8]~training[, 160], col=2:6)
boxplot(training[, 9]~training[, 160], col=2:6)
boxplot(training[, 10]~training[, 160], col=2:6)
boxplot(training[, 11]~training[, 160], col=2:6)
boxplot(training[, 12]~training[, 160], col=2:6)
boxplot(training[, 13]~training[, 160], col=2:6)
boxplot(training[, 14]~training[, 160], col=2:6)
boxplot(training[, 15]~training[, 160], col=2:6)
boxplot(training[, 16]~training[, 160], col=2:6)
boxplot(training[, 18]~training[, 160], col=2:6)
boxplot(training[, 19]~training[, 160], col=2:6)
boxplot(training[, 12]~training[, 160], col=2:6)
boxplot(training[, 20]~training[, 160], col=2:6)
boxplot(training[, 21]~training[, 160], col=2:6)
boxplot(training[, 22]~training[, 160], col=2:6)
boxplot(training[, 23]~training[, 160], col=2:6)
boxplot(training[, 24]~training[, 160], col=2:6)
boxplot(training[, 25]~training[, 160], col=2:6)
boxplot(training[, 26]~training[, 160], col=2:6)
boxplot(training[, 27]~training[, 160], col=2:6)
boxplot(training[, 28]~training[, 160], col=2:6)
prVec=sapply(testing, is.numeric)
prVec[1:7]=F
trai=training[ , prVec]
trai$classe=as.factor(trai$classe)
test$classe=as.factor(test$classe)
?test
test=testing[ , prVec]
boxplot(trai[, 8:19]~training[, 160], col=2:6)
str(trai)
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 13:24], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 37:48], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:5) )
search()
sapply(trai[, 49:51], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 49:51], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 49:51], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 49:51], function(x) boxplot(x~trai$classe, col=2:5) )
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trai[, 13:24], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=2:6) )
?boxplot
?boxplot
bxp(training[, 28]~training[, 160], col=2:6)
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trai[, 13:24], function(x) boxplot(x~trai$classe, col=3:7) )
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=3:8) )
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=4:8) )
sapply(trai[, 37:48], function(x) boxplot(x~trai$classe, col=5:9) )
sapply(trai[, 40:51], function(x) boxplot(x~trai$classe, col=2:6) )
dim(trai)
sapply(trai[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trai[, 13:24], function(x) boxplot(x~trai$classe, col=3:7) )
names(trai)[13]
names(trai)[21]
names(trai)[24]
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=4:8) )
names(trai)[31]
min(training$gyros_dumbbell_x)
training[
training$gyros_dumbbell_x==-204, 1:7]
names(trai)[32]
min(training$gyros_dumbbell_y)
max(training$gyros_dumbbell_y)
training[training$gyros_dumbbell_y==52, 1:7]
names(trai)[33]
max(training$gyros_dumbbell_z)
training[training$gyros_dumbbell_y==317, 1:7]
training[training$gyros_dumbbell_z==317, 1:7]
sum(training$user_name=="eurico")
sum(training$user_name=="eurico"& training$classe=="A")
training0=training[!(training$user_name=="eurico"), ]
trai0=training0[,prVec]
sapply(trai0[, 25:36], function(x) boxplot(x~trai0$classe, col=4:8) )
sapply(trai0[, 1:12], function(x) boxplot(x~trai0$classe, col=2:6) )
sapply(trai0[, 13:24], function(x) boxplot(x~trai0$classe, col=3:7) )
unique(training[,2])
sapply(trai[, 25:36], function(x) boxplot(x~trai$classe, col=4:8) )
sapply(trai0[, 1:12], function(x) boxplot(x~trai0$classe, col=2:6) )
history(200)
par(mfrow=c(2,1))
mu<-2
si<-0.6
bimodal<-c(rnorm(1000,-mu,si),rnorm(1000,mu,si))
uniform<-runif(2000,-4,4)
normal<-rnorm(2000,0,3)
vioplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
# add to an existing plot
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, xlim=c(-5,5), ylim=c(-5,5))
vioplot(x, col="tomato", horizontal=TRUE, at=-4, add=TRUE,lty=2, rectCol="gray")
vioplot(y, col="cyan", horizontal=FALSE, at=-4, add=TRUE,lty=2)
install.packages("vioplot")
install.packages("vioplot")
?install.packages
install.packages("vioplot",repos = getOption("repos"))
install.packages$url
?install.packages
install.packages("vioplot",repos = NULL)
install.packages("vioplot")
install.packages$repos
?install.packages
install.packages("vioplot",repos = "http://cran.us.r-project.org")
par(mfrow=c(2,1))
mu<-2
si<-0.6
bimodal<-c(rnorm(1000,-mu,si),rnorm(1000,mu,si))
uniform<-runif(2000,-4,4)
normal<-rnorm(2000,0,3)
vioplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
# add to an existing plot
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, xlim=c(-5,5), ylim=c(-5,5))
vioplot(x, col="tomato", horizontal=TRUE, at=-4, add=TRUE,lty=2, rectCol="gray")
vioplot(y, col="cyan", horizontal=FALSE, at=-4, add=TRUE,lty=2)
library(vioplot)
par(mfrow=c(2,1))
mu<-2
si<-0.6
bimodal<-c(rnorm(1000,-mu,si),rnorm(1000,mu,si))
uniform<-runif(2000,-4,4)
normal<-rnorm(2000,0,3)
vioplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
# add to an existing plot
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, xlim=c(-5,5), ylim=c(-5,5))
vioplot(x, col="tomato", horizontal=TRUE, at=-4, add=TRUE,lty=2, rectCol="gray")
vioplot(y, col="cyan", horizontal=FALSE, at=-4, add=TRUE,lty=2)
vioplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
boxplot(bimodal,uniform,normal)
vioplot(bimodal,uniform,normal)
require(stats)
set.seed(753)
(bx.p <- boxplot(split(rt(100, 4), gl(5, 20))))
op <- par(mfrow =  c(2, 2))
bxp(bx.p, xaxt = "n")
bxp(bx.p, notch = TRUE, axes = FALSE, pch = 4, boxfill = 1:5)
bxp(bx.p, notch = TRUE, boxfill = "lightblue", frame = FALSE,
    outl = FALSE, main = "bxp(*, frame= FALSE, outl= FALSE)")
bxp(bx.p, notch = TRUE, boxfill = "lightblue", border = 2:6,
    ylim = c(-4,4), pch = 22, bg = "green", log = "x",
    main = "... log = 'x', ylim = *")
par(op)
op <- par(mfrow = c(1, 2))
## single group -- no label
boxplot (weight ~ group, data = PlantGrowth, subset = group == "ctrl")
## with label
bx <- boxplot(weight ~ group, data = PlantGrowth,
              subset = group == "ctrl", plot = FALSE)
bxp(bx, show.names=TRUE)
par(op)
z <- split(rnorm(1000), rpois(1000, 2.2))
boxplot(z, whisklty = 3, main = "boxplot(z, whisklty = 3)")
require(stats)
set.seed(753)
(bx.p <- boxplot(split(rt(100, 4), gl(5, 20))))
op <- par(mfrow =  c(2, 2))
bxp(bx.p, xaxt = "n")
bxp(bx.p, notch = TRUE, axes = FALSE, pch = 4, boxfill = 1:5)
bxp(bx.p, notch = TRUE, boxfill = "lightblue", frame = FALSE,
    outl = FALSE, main = "bxp(*, frame= FALSE, outl= FALSE)")
bxp(bx.p, notch = TRUE, boxfill = "lightblue", border = 2:6,
    ylim = c(-4,4), pch = 22, bg = "green", log = "x",
    main = "... log = 'x', ylim = *")
par(op)
op <- par(mfrow = c(1, 2))
## single group -- no label
boxplot (weight ~ group, data = PlantGrowth, subset = group == "ctrl")
## with label
bx <- boxplot(weight ~ group, data = PlantGrowth,
              subset = group == "ctrl", plot = FALSE)
bxp(bx, show.names=TRUE)
ls()
rm("bimodal)
"
)
rm("bimodal")
ls()
rm(ls()[1:5])
rem=ls()
rem
rm(rem[1:5])
rm("bx","bx.p", "mu",  "normal" ,   "op")
ls()
rm("rem", "si")
ls()
rm("training0", "uniform","x","y","z")
str(trai)
> ## single group -- no label
> boxplot (weight ~ group, data = PlantGrowth, subset = group == "ctrl")
> ## with label
> bx <- boxplot(weight ~ group, data = PlantGrowth,
+               subset = group == "ctrl", plot = FALSE)
> bxp(bx, show.names=TRUE)
> ls()
 [1] "bimodal"   "bx"        "bx.p"      "mu"        "normal"    "op"       
 [7] "prVec"     "si"        "test"      "testing"   "trai"      "trai0"    
[13] "training"  "training0" "uniform"
modrf=train(classe~., data=trai, method="rf")
?cor
cor(trai[ , 10])
first10=trai[ , 10]
cor(first10)
head(first10)
cor(trai[ ,1: 10])
names(trai)[18]
save(file="/home/myab/CourseraStuff/MachinePredictionRandomForestModel.RData")
save.image(file="/home/myab/CourseraStuff/MachinePredictionRandomForestModel.RData")
prefVec=c(12, 13, 18, 19, 21, 24, 25, 26, 27, 37, 38, 40, 48)
trainPref=trai[ , prefVec]
dim(trai)
prefVec=c(12, 13, 18, 19, 21, 24, 25, 26, 27, 37, 38, 40, 48, 53)
trainPref=trai[ , prefVec]
sapply(trainPref[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
par(mfrow=c(3,4), mar=c(2,2,2,2))
sapply(trainPref[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trainPref[, 2:13], function(x) boxplot(x~trai$classe, col=2:6) )
sapply(trainPref[, 1:12], function(x) boxplot(x~trai$classe, col=2:6) )
ls()
str(first10)
quit()
